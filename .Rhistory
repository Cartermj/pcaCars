group_by(Location, Level) %>%
dplyr::summarise (Num_Empl= n(),YTD_Util=round(mean(NewUtilYTD),digits=0))
results <-as.data.frame(results)
#Add Target Utilizations & Delta against YTD
results$Target_Util <-ifelse(results$Level=="Associate",85,
ifelse(results$Level=="Senior",80,
ifelse(results$Level=="Manager",70,60)))
results$Delta_Util <-results$YTD_Util-results$Target_Util
#Add Hrs per year per employee & Delta
results$Delta_Hrs_All_Empl <-results$Delta_Util/100*2096*results$Num_Empl
#Add Delta FTE & pos/Neg
results$Delta_FTE <-round(results$Delta_Hrs_All_Empl/(results$Target_Util/100*2096),1)
results$Pos <-ifelse(results$Delta_FTE>="0","Pos","Neg")
#View(results)
#Summarize results
resultsSum <-results %>% group_by(Level) %>% summarise(Delta_FTE=sum(Delta_FTE))
resultsSum$Pos <-ifelse(resultsSum$Delta_FTE>="0","Pos","Neg")
resultsSum$Location <-"Total"
resultsSum <-data.frame(resultsSum)
#View(resultsSum)
total_Empl <-results %>%
group_by(Level) %>%
summarise (Num_Empl= sum(Num_Empl))
total_Empl <-as.data.frame(total_Empl)
#Combine results dataframe and resultsSum dataframe for plotting
resultsSub <-subset(results[,c(1,2,8,9)])
resultsSum <-resultsSum[,c(4,1,2,3)]
combined <-merge(resultsSub, resultsSum, all = TRUE)
#View(combined)
#Plot Results
plotresults <- ggplot(combined,aes(x=Level,y=Delta_FTE, fill=Pos))+
geom_bar(stat="identity", position="identity",width=0.15)+
scale_fill_manual(values=c("red", "blue"), guide=FALSE)+
geom_text(aes(label=Delta_FTE), size=2.5, vjust=1)+
facet_grid(Location~.)+
ggtitle(paste("EDM FTE's Needed to Achieve Target Utilization",ReportDate))
ylab("")+
#  scale_y_continuous(limits=c(-6,6))+
theme_bw()
plotresults
ggsave(file="C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Figures\\ EDM_FTE_Needs.pdf", width=11, height=8, units="in")
libs<-c("openxlsx","plyr","ggplot2","doBy","dplyr", "tidyr","scales", "stringr")
lapply(libs, library, quietly = TRUE, character.only = TRUE)
############## DEBUGGING TOOLS ######################
# class(X)          # Showing Data Class
# sapply(X, class)  # show classes of all columns
# typeof(X)         # list
# names(X)          # show list components
# dim(X)            # dimensions of object, if any
# head(X)           # extract first few (default 6) parts
# tail(X, 1)        # extract last row
# head(1:10, -1)    # extract everything except the last element
# length(X)
# str(X)            # provides details of x
# View(X)           # displays data
# pairs(X)          # df only with factors and numeric values
ReportDate <- "23 May 2016"
#Read Data From File
wb <- read.xlsx("C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Data\\Processed_Data\\FY2016\\01 FTech Utilization Detail May 22 FY16 - incl Dir.xlsx",sheet="Details by Individual ",startRow=5)
utilData <- wb
utilData <-utilData[,c(1:7,9:24,36:37)]
utilData <-subset(utilData, Curr.Status=="A")
utilData <-utilData[order(utilData$Employee.Name),]
###########################################################################
#Copy Util report to Processed_Data - DO NOT MODIFY #######################
###########################################################################
###########################################################################
##BEFORE PROCEEDING - MODIFY rows 27, 30###################################
###########################################################################
#Initialize Environment (Packages, Directories, etc)
libs<-c("openxlsx","plyr","ggplot2","doBy","dplyr", "tidyr","scales", "stringr")
lapply(libs, library, quietly = TRUE, character.only = TRUE)
############## DEBUGGING TOOLS ######################
# class(X)          # Showing Data Class
# sapply(X, class)  # show classes of all columns
# typeof(X)         # list
# names(X)          # show list components
# dim(X)            # dimensions of object, if any
# head(X)           # extract first few (default 6) parts
# tail(X, 1)        # extract last row
# head(1:10, -1)    # extract everything except the last element
# length(X)
# str(X)            # provides details of x
# View(X)           # displays data
# pairs(X)          # df only with factors and numeric values
ReportDate <- "23 May 2016"
#Read Data From File
wb <- read.xlsx("C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Data\\Processed_Data\\FY2016\\01 FTech Utilization Detail May 22 FY16 - incl Dir.xlsx",sheet="Details by Individual ",startRow=5)
utilData <- wb
utilData <-utilData[,c(1:7,9:24,36:37)]
utilData <-subset(utilData, Curr.Status=="A")
utilData <-utilData[order(utilData$Employee.Name),]
#Delete Specialists/specific employees
utilData <- utilData[!(utilData$Employee.Name %in% c("Carter, Michael",
"Hall, Jay",
"Monty, Jim",
"Estifanos, Samrawit",
"Ho, David",
"Bruk, Victor",
"Chiotti, Mark",
"Baliclic-Durst, Jovelyn",
"Kahanic, Steven",
"Adams, Richard",
"Cartier, David",
"Downs, Matthew",
"Estrada, Jose",
"Horvath, Krystina",
"Keo, Houth",
"Meier, Charles",
"Nelabhotla, Rajendra Kumar",
"Singh, Amandeep",
"Wahlstrom, Scott",
"Yawson, Jonathan"
)),]
#Recode "EDM" resources to EDM
utilData$Profit.Center[utilData$Employee.Name =="Chan, Aileen"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Darracott, Holly"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Guy, Chip"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="King, Kyndel"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Livachof, Matias"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Nyhan, Andrew"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Parrish, Mia"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Weisner, Ayisha"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Williams, Harriett"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Kelley, Shaun"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Milley, Karen"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Trizzino, Brett"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="DeSarro, Anthony"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Chasteen, Hovis"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="sheu, Addison"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Melara, Danny"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Peterson, Melissa"] <- "Forensic Technology - EDM"
#Get unique records
utilData <- ddply(utilData,~Employee.Name,function(d)d[which.max(d$Chbl.1),])
#Util by Location by Level - EDM Only
utilData <-subset(utilData, Profit.Center=="Forensic Technology - EDM")
#Calculate actual average for each level
levelAvg <-utilData %>%
group_by(Level)%>%
summarize(avg=mean(NewUtilYTD))
levelAvg <-as.data.frame(levelAvg)
#View(levelAvg)
allData <-utilData
#View(allData)
#Determine Trends
#Trend 1 - Projected YE Utilization based on YTD + Last Month's Util
#Get # Weeks since Oct 1
startDate <- strptime("01 October 2015", "%d %B %Y")
currentDate <- strptime(as.Date(ReportDate,"%d %B %Y"), "%Y-%m-%d")
endDate <-strptime("30 September 2016", "%d %B %Y")
elapsedWeeks <-as.numeric(currentDate-startDate)/7
remainingWeeks <-as.numeric(endDate-currentDate)/7
#Forecast YE Util
allData$FcstYEUtil <- ((allData$NewUtilYTD*elapsedWeeks)+(allData$NewUtilMTD*remainingWeeks))/52
#Trend 2 - More/Less Busy based on comparing current Month+/-25% Util vs YTD
allData$Busy <- ifelse(allData$NewUtilMTD>(allData$NewUtilYTD+allData$NewUtilYTD*.35),"Busy",
ifelse(allData$NewUtilMTD<(allData$NewUtilYTD-allData$NewUtilYTD*.35),"Slow",
""))
###################### NEW PLOT - ASSOCIATE START ###############
allDataA<-allData[allData$Level == "Associate", ]
allDataA$Employee.Name <-factor(allDataA$Employee.Name,levels=allDataA$Employee.Name[order(-allDataA$NewUtilMTD)])
allDataA$NewUtilMTD[allDataA$NewUtilMTD > 200] <- 200
allDataA$NewUtilYTD[allDataA$NewUtilYTD > 200] <- 200
#View(allDataA)
#Get Associate Actual Average
assocAvg <- subset(levelAvg,Level=="Associate")
utilData <-subset(utilData, Curr.Status=="A")
p<-ggplot(allDataA, aes(x=Employee.Name,y=NewUtilMTD))+
geom_hline(yintercept = 85, color="blue", size=1)+
geom_hline(yintercept = assocAvg$avg, color="#009E73", size=1)+
geom_bar(stat='identity',width=0.5)+
geom_point(data=allDataA,shape=16,size=3,color="red",aes(x=Employee.Name,y=NewUtilYTD))+
geom_point(data=allDataA,shape=18,size=3, color="green",aes(x=Employee.Name,y=FcstYEUtil))+
geom_text(data=allDataA,aes(x=allDataA$Employee.Name,y=0),label=allDataA$Busy, color="white",size=3,hjust=0)+
theme(legend.position = "")+
coord_flip()+
scale_y_continuous(breaks=c(seq(from=0,to=150,by=10)),labels=c(seq(from=0,to=150,by=10)))+
ylab("Utilization %")+
xlab("")+
annotate("text", x=16, y= (max(allDataA$NewUtilMTD)*1.06),label="YTD   MTD   Target   YTD Avg  YE Fcst",hjust=1,size=3,fontface="bold")+
annotate("pointrange", x = 15.5, y = (max(allDataA$NewUtilMTD)*0.81), ymin = 1, ymax = 1, colour = "red", size = 1)+
annotate("segment", x = 15.5, xend = 15.5, y = (max(allDataA$NewUtilMTD)*0.87), yend = (max(allDataA$NewUtilMTD)*0.84), colour = "black", size=2.5)+
annotate("segment", x = 15.5, xend = 15.5, y = (max(allDataA$NewUtilMTD)*0.92), yend = (max(allDataA$NewUtilMTD)*0.89), colour = "blue", size=1)+
annotate("segment", x = 15.5, xend = 15.5, y = (max(allDataA$NewUtilMTD)*0.98), yend = (max(allDataA$NewUtilMTD)*0.95), colour = "#009E73", size=1)+
annotate("pointrange", x = 15.5, xend = 15.5, y = (max(allDataA$NewUtilMTD)*1.04), ymin = 1, ymax = 1, colour = "green", size=1)+
ggtitle(paste("Utilization for EDM ASSOCIATE as of",ReportDate))
p
ggsave("C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Figures\\Assoc.pdf", plot = p, width = 11, height = 8.5)
###################### NEW PLOT - SENIOR ASSOCIATE START ###############
allDataS<-allData[allData$Level == "Senior", ]
allDataS$Employee.Name <-factor(allDataS$Employee.Name,levels=allDataS$Employee.Name[order(-allDataS$NewUtilMTD)])
allDataS$NewUtilMTD[allDataS$NewUtilMTD > 200] <- 200
allDataS$NewUtilYTD[allDataS$NewUtilYTD > 200] <- 200
#Get Senior Actual Average
seniorAvg <- subset(levelAvg,Level=="Senior")
#View(allDataS)
q<-ggplot(allDataS, aes(x=Employee.Name,y=NewUtilMTD))+
geom_hline(yintercept = 80, color="blue", size=1)+
geom_hline(yintercept = seniorAvg$avg, color="#009E73", size=1)+
geom_bar(stat='identity',width=0.5)+
geom_point(data=allDataS,shape=16,size=3,color="red",aes(x=Employee.Name,y=NewUtilYTD))+
geom_point(data=allDataS,shape=18,size=3, color="green",aes(x=Employee.Name,y=FcstYEUtil))+
geom_text(data=allDataS,aes(x=allDataS$Employee.Name,y=0),label=allDataS$Busy, color="white",size=3,hjust=0)+
theme(legend.position = "")+
coord_flip()+
scale_y_continuous(breaks=c(seq(from=0,to=150,by=10)),labels=c(seq(from=0,to=150,by=10)))+
ylab("Utilization %")+
xlab("")+
annotate("text", x=31.5, y= (max(allDataS$NewUtilMTD)*1.00),label="YTD   MTD   Target   YTD Avg  YE Fcst",hjust=1,size=3,fontface="bold")+
annotate("pointrange", x = 30, y = (max(allDataS$NewUtilMTD)*0.74), ymin = 1, ymax = 1, colour = "red", size = 1)+
annotate("segment", x = 30, xend = 30, y = (max(allDataS$NewUtilMTD)*0.80), yend = (max(allDataS$NewUtilMTD)*0.77), colour = "black", size=2.5)+
annotate("segment", x = 30, xend = 30, y = (max(allDataS$NewUtilMTD)*0.85), yend = (max(allDataS$NewUtilMTD)*0.82), colour = "blue", size=1)+
annotate("segment", x = 30, xend = 30, y = (max(allDataS$NewUtilMTD)*0.91), yend = (max(allDataS$NewUtilMTD)*0.88), colour = "#009E73", size=1)+
annotate("pointrange", x = 30, xend = 30, y = (max(allDataS$NewUtilMTD)*0.97), ymin = 1, ymax = 1, colour = "green", size=1)+
ggtitle(paste("Utilization for EDM SENIOR ASSOCIATE as of",ReportDate))
q
ggsave("C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Figures\\Sr Assoc.pdf", plot = q, width = 11, height = 8.5)
###################### NEW PLOT - MANAGER START ###############
allDataM<-allData[allData$Level == "Manager", ]
allDataM$Employee.Name <-factor(allDataM$Employee.Name,levels=allDataM$Employee.Name[order(-allDataM$NewUtilMTD)])
allDataM$NewUtilMTD[allDataM$NewUtilMTD > 200] <- 200
allDataM$NewUtilYTD[allDataM$NewUtilYTD > 200] <- 200
#Get Manager Actual Average
manAvg <- subset(levelAvg,Level=="Manager")
#View(allDataM)
r<-ggplot(allDataM, aes(x=Employee.Name,y=NewUtilMTD))+
geom_hline(yintercept = 70, color="blue", size=1)+
geom_hline(yintercept = manAvg$avg, color="#009E73", size=1)+
geom_bar(stat='identity',width=0.5)+
geom_point(data=allDataM,shape=16,size=3,color="red",aes(x=Employee.Name,y=NewUtilYTD))+
geom_point(data=allDataM,shape=18,size=3, color="green",aes(x=Employee.Name,y=FcstYEUtil))+
geom_text(data=allDataM,aes(x=allDataM$Employee.Name,y=0),label=allDataM$Busy, color="white",size=3,hjust=0)+
theme(legend.position = "")+
coord_flip()+
scale_y_continuous(breaks=c(seq(from=0,to=150,by=10)),labels=c(seq(from=0,to=150,by=10)))+
ylab("Utilization %")+
xlab("")+
annotate("text", x=26, y= (max(allDataM$NewUtilMTD)*1.00),label="YTD   MTD   Target   YTD Avg  YE Fcst",hjust=1,size=3,fontface="bold")+
annotate("pointrange", x = 25, y = (max(allDataM$NewUtilMTD)*0.75), ymin = 1, ymax = 1, colour = "red", size = 1)+
annotate("segment", x = 25, xend = 25, y = (max(allDataM$NewUtilMTD)*0.81), yend = (max(allDataM$NewUtilMTD)*0.78), colour = "black", size=2.5)+
annotate("segment", x = 25, xend = 25, y = (max(allDataM$NewUtilMTD)*0.86), yend = (max(allDataM$NewUtilMTD)*0.83), colour = "blue", size=1)+
annotate("segment", x = 25, xend = 25, y = (max(allDataM$NewUtilMTD)*0.93), yend = (max(allDataM$NewUtilMTD)*0.90), colour = "#009E73", size=1)+
annotate("pointrange", x = 25, xend = 25, y = (max(allDataM$NewUtilMTD)*0.97), ymin = 1, ymax = 1, colour = "green", size=1)+
ggtitle(paste("Utilization for EDM MANAGER as of",ReportDate))
r
ggsave("C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Figures\\Manager.pdf", plot = r, width = 11, height = 8.5)
###################### NEW PLOT - DIRECTOR START ###############
allDataD<-allData[allData$Level == "Director", ]
allDataD$Employee.Name <-factor(allDataD$Employee.Name,levels=allDataD$Employee.Name[order(-allDataD$NewUtilMTD)])
allDataD$NewUtilMTD[allDataD$NewUtilMTD > 200] <- 200
allDataD$NewUtilYTD[allDataD$NewUtilYTD > 200] <- 200
#Get Director Actual Average
dirAvg <- subset(levelAvg,Level=="Director")
#View(allDataD)
s<-ggplot(allDataD, aes(x=Employee.Name,y=NewUtilMTD))+
geom_hline(yintercept = 60, color="blue", size=1)+
geom_hline(yintercept = dirAvg$avg, color="#009E73", size=1)+
geom_bar(stat='identity',width=0.5)+
geom_point(data=allDataD,shape=16,size=3,color="red",aes(x=Employee.Name,y=NewUtilYTD))+
geom_point(data=allDataD,shape=18,size=3, color="green",aes(x=Employee.Name,y=FcstYEUtil))+
geom_text(data=allDataD,aes(x=allDataD$Employee.Name,y=0),label=allDataD$Busy, color="white",size=3,hjust=0)+
theme(legend.position = "")+
coord_flip()+
scale_y_continuous(breaks=c(seq(from=0,to=150,by=10)),labels=c(seq(from=0,to=150,by=10)))+
ylab("Utilization %")+
xlab("")+
annotate("text", x=13, y= (max(allDataD$NewUtilMTD)*1.92),label="YTD   MTD   Target   YTD Avg  YE Fcst",hjust=1,size=3,fontface="bold")+
annotate("pointrange", x = 12.5, y = (max(allDataD$NewUtilMTD)*1.43), ymin = 1, ymax = 1, colour = "red", size = 1)+
annotate("segment", x = 12.5, xend = 12.5, y = (max(allDataD$NewUtilMTD)*1.53), yend = (max(allDataD$NewUtilMTD)*1.50), colour = "black", size=2.5)+
annotate("segment", x = 12.5, xend = 12.5, y = (max(allDataD$NewUtilMTD)*1.65), yend = (max(allDataD$NewUtilMTD)*1.62), colour = "blue", size=1)+
annotate("segment", x = 12.5, xend = 12.5, y = (max(allDataD$NewUtilMTD)*1.75), yend = (max(allDataD$NewUtilMTD)*1.72), colour = "#009E73", size=1)+
annotate("pointrange", x = 12.5, xend = 12.5, y = (max(allDataD$NewUtilMTD)*1.85), ymin = 1, ymax = 1, colour = "green", size=1)+
ggtitle(paste("Utilization for EDM DIRECTOR as of",ReportDate))
s
ggsave("C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Figures\\Director.pdf", plot = s, width = 11, height = 8.5)
############# Analyze YTD Utilization by Level & Location #############################
wb
utilData <- wb
utilData <-utilData[,c(1,3,4:6,21,36:37)]
#View(utilData)
names(utilData)
utilData <- ddply(utilData,~Employee.Name,function(d)d[which.max(d$Chbl),])
#View(utilData)
#Delete Specialists/specific employees
utilData <- utilData[!(utilData$Employee.Name %in% c("Carter, Michael",
"Hall, Jay",
"Monty, Jim",
"Estifanos, Samrawit",
"Ho, David",
"Bruk, Victor",
"Chiotti, Mark",
"Baliclic-Durst, Jovelyn",
"Kahanic, Steven",
"Adams, Richard",
"Cartier, David",
"Downs, Matthew",
"Estrada, Jose",
"Horvath, Krystina",
"Keo, Houth",
"Meier, Charles",
"Nelabhotla, Rajendra Kumar",
"Singh, Amandeep",
"Wahlstrom, Scott",
"Yawson, Jonathan"
)),]
#Recode "EDM" resources to EDM
utilData$Profit.Center[utilData$Employee.Name =="Chan, Aileen"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Darracott, Holly"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Guy, Chip"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="King, Kyndel"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Livachof, Matias"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Nyhan, Andrew"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Parrish, Mia"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Weisner, Ayisha"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Williams, Harriett"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Kelley, Shaun"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Milley, Karen"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Trizzino, Brett"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="DeSarro, Anthony"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Chasteen, Hovis"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="sheu, Addison"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Melara, Danny"] <- "Forensic Technology - EDM"
utilData$Profit.Center[utilData$Employee.Name =="Peterson, Melissa"] <- "Forensic Technology - EDM"
#Util by Location by Level - EDM Only
utilDataEDMLo <-subset(utilData, Profit.Center=="Forensic Technology - EDM")
utilDataEDMLo <-subset(utilDataEDMLo, Curr.Status=="A")
utilDataEDMLo <-subset(utilDataEDMLo, Level %in% c("Associate", "Senior", "Manager", "Director"))
utilDataEDMLo <-utilDataEDMLo[order(utilDataEDMLo$Employee.Name),]
utilDataEDMLo <-subset(utilDataEDMLo, !duplicated(utilDataEDMLo$Employee.Name))
utilDataEDMLox <-utilDataEDMLo
utilDataEDMLox$Location <-ifelse(utilDataEDMLox$BA.Name=="CHICAGO","Chi",
ifelse(utilDataEDMLox$BA.Name=="New York - Air Force","NY",
ifelse(utilDataEDMLox$BA.Name=="DETROIT","DET",
ifelse(utilDataEDMLox$BA.Name=="SAN FRANCISCO","SFO",
ifelse(utilDataEDMLox$BA.Name=="NEW YORK - 345 PARK AVE","NY",
ifelse(utilDataEDMLox$BA.Name=="Seal Beach","SBeach",
ifelse(utilDataEDMLox$BA.Name=="ATLANTA - 303 PEACH TREE", "ATL",
ifelse(utilDataEDMLox$BA.Name=="WASHINGTON", "DC",
ifelse(utilDataEDMLox$BA.Name=="McLEAN", "DC",
ifelse(utilDataEDMLox$BA.Name=="MIAMI", "MIA",
ifelse(utilDataEDMLox$BA.Name=="MINNEAPOLIS", "MINN",
ifelse(utilDataEDMLox$BA.Name=="MONTVALE - 51 CHESTNUT RIDGE R", "SBeach",
ifelse(utilDataEDMLox$BA.Name=="MONTVALE - 3 CHESTNUT RIDGE RD", "SBeach",
ifelse(utilDataEDMLox$BA.Name=="HOUSTON", "HOU","CHA"))))))))))))))
results <-utilDataEDMLox %>%
group_by(Location, Level) %>%
dplyr::summarise (Num_Empl= n(),YTD_Util=round(mean(NewUtilYTD),digits=0))
results <-as.data.frame(results)
#Add Target Utilizations & Delta against YTD
results$Target_Util <-ifelse(results$Level=="Associate",85,
ifelse(results$Level=="Senior",80,
ifelse(results$Level=="Manager",70,60)))
results$Delta_Util <-results$YTD_Util-results$Target_Util
#Add Hrs per year per employee & Delta
results$Delta_Hrs_All_Empl <-results$Delta_Util/100*2096*results$Num_Empl
#Add Delta FTE & pos/Neg
results$Delta_FTE <-round(results$Delta_Hrs_All_Empl/(results$Target_Util/100*2096),1)
results$Pos <-ifelse(results$Delta_FTE>="0","Pos","Neg")
#View(results)
#Summarize results
resultsSum <-results %>% group_by(Level) %>% summarise(Delta_FTE=sum(Delta_FTE))
resultsSum$Pos <-ifelse(resultsSum$Delta_FTE>="0","Pos","Neg")
resultsSum$Location <-"Total"
resultsSum <-data.frame(resultsSum)
#View(resultsSum)
total_Empl <-results %>%
group_by(Level) %>%
summarise (Num_Empl= sum(Num_Empl))
total_Empl <-as.data.frame(total_Empl)
#Combine results dataframe and resultsSum dataframe for plotting
resultsSub <-subset(results[,c(1,2,8,9)])
resultsSum <-resultsSum[,c(4,1,2,3)]
combined <-merge(resultsSub, resultsSum, all = TRUE)
#View(combined)
#Plot Results
plotresults <- ggplot(combined,aes(x=Level,y=Delta_FTE, fill=Pos))+
geom_bar(stat="identity", position="identity",width=0.15)+
scale_fill_manual(values=c("red", "blue"), guide=FALSE)+
geom_text(aes(label=Delta_FTE), size=2.5, vjust=1)+
facet_grid(Location~.)+
ggtitle(paste("EDM FTE's Needed to Achieve Target Utilization",ReportDate))
ylab("")+
#  scale_y_continuous(limits=c(-6,6))+
theme_bw()
plotresults
ggsave(file="C:\\Users\\mjcarter\\Desktop\\Analytics Projects\\Utilization\\Figures\\ EDM_FTE_Needs.pdf", width=11, height=8, units="in")
setwd("~/GitHub/pcaCars")
# cor = TRUE indicates that PCA is performed on
# standardized data (mean = 0, variance = 1)
pcaCars <- princomp(mtcars, cor = TRUE)
# view objects stored in pcaCars
names(pcaCars)
# proportion of variance explained
summary(pcaCars)
# scree plot
plot(pcaCars, type = "l")
# cor = TRUE indicates that PCA is performed on
# standardized data (mean = 0, variance = 1)
pcaCars <- princomp(mtcars, cor = TRUE)
# view objects stored in pcaCars
names(pcaCars)
# proportion of variance explained
summary(pcaCars)
# bar plot
plot(pcaCars)
# cor = TRUE indicates that PCA is performed on
# standardized data (mean = 0, variance = 1)
pcaCars <- princomp(mtcars, cor = TRUE)
# view objects stored in pcaCars
names(pcaCars)
# proportion of variance explained
summary(pcaCars)
# bar plot
plot(pcaCars)
# cluster cars
carsHC <- hclust(dist(pcaCars$scores), method = "ward.D2")
# dendrogram
plot(carsHC)
# cut the dendrogram into 3 clusters
carsClusters <- cutree(carsHC, k = 3)
# add cluster to data frame of scores
carsDf <- data.frame(pcaCars$scores, "cluster" = factor(carsClusters))
str(carsDf)
# plot the first 2 PCs with cluster membership
# need to install ggplot2 and ggrepel packages first
# using the following command in R:
# install.packages(c("ggplot2","ggrepel"))
library(ggplot2)
library(ggrepel)
ggplot(carsDf,aes(x=Comp.1, y=Comp.2)) +
geom_text_repel(aes(label = rownames(carsDf))) +
theme_classic() +
geom_hline(yintercept = 0, color = "gray70") +
geom_vline(xintercept = 0, color = "gray70") +
geom_point(aes(color = cluster), alpha = 0.55, size = 3) +
xlab("PC1") +
ylab("PC2") +
xlim(-5, 6) +
ggtitle("PCA plot of Cars")
install.packages("ggrepel")
install.packages("ggrepel")
install.packages("ggrepel")
install.packages("ggrepel")
# cor = TRUE indicates that PCA is performed on
# standardized data (mean = 0, variance = 1)
pcaCars <- princomp(mtcars, cor = TRUE)
# view objects stored in pcaCars
names(pcaCars)
# proportion of variance explained
summary(pcaCars)
# bar plot
plot(pcaCars)
# cluster cars
carsHC <- hclust(dist(pcaCars$scores), method = "ward.D2")
# dendrogram
plot(carsHC)
# cut the dendrogram into 3 clusters
carsClusters <- cutree(carsHC, k = 3)
# add cluster to data frame of scores
carsDf <- data.frame(pcaCars$scores, "cluster" = factor(carsClusters))
str(carsDf)
# plot the first 2 PCs with cluster membership
# need to install ggplot2 and ggrepel packages first
# using the following command in R:
# install.packages(c("ggplot2","ggrepel"))
library(ggplot2)
library(ggrepel)
ggplot(carsDf,aes(x=Comp.1, y=Comp.2)) +
geom_text_repel(aes(label = rownames(carsDf))) +
theme_classic() +
geom_hline(yintercept = 0, color = "gray70") +
geom_vline(xintercept = 0, color = "gray70") +
geom_point(aes(color = cluster), alpha = 0.55, size = 3) +
xlab("PC1") +
ylab("PC2") +
xlim(-5, 6) +
ggtitle("PCA plot of Cars")
library("ggplot2", lib.loc="~/R/win-library/R-3.2.2/library")
# cor = TRUE indicates that PCA is performed on
# standardized data (mean = 0, variance = 1)
pcaCars <- princomp(mtcars, cor = TRUE)
# view objects stored in pcaCars
names(pcaCars)
# proportion of variance explained
summary(pcaCars)
# bar plot
plot(pcaCars)
# cluster cars
carsHC <- hclust(dist(pcaCars$scores), method = "ward.D2")
# dendrogram
plot(carsHC)
# cut the dendrogram into 3 clusters
carsClusters <- cutree(carsHC, k = 3)
# add cluster to data frame of scores
carsDf <- data.frame(pcaCars$scores, "cluster" = factor(carsClusters))
str(carsDf)
# plot the first 2 PCs with cluster membership
# need to install ggplot2 and ggrepel packages first
# using the following command in R:
# install.packages(c("ggplot2","ggrepel"))
library(ggplot2)
library(ggrepel)
ggplot(carsDf,aes(x=Comp.1, y=Comp.2)) +
geom_text_repel(aes(label = rownames(carsDf))) +
theme_classic() +
geom_hline(yintercept = 0, color = "gray70") +
geom_vline(xintercept = 0, color = "gray70") +
geom_point(aes(color = cluster), alpha = 0.55, size = 3) +
xlab("PC1") +
ylab("PC2") +
xlim(-5, 6) +
ggtitle("PCA plot of Cars")
